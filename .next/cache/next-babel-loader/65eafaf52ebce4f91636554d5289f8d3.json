{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as mongoose from 'mongoose';\nimport { UserModel, User } from '../models/user';\nimport config from '../config';\nexport default (function (fn) {\n  return function _callee(req, res) {\n    var _mongoose$connection;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(((_mongoose$connection = mongoose.connection) === null || _mongoose$connection === void 0 ? void 0 : _mongoose$connection.readyState) != 1)) {\n              _context.next = 4;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(mongoose.connect(config.mongodbUri, {\n              useNewUrlParser: true,\n              useUnifiedTopology: true\n            }));\n\n          case 3:\n            UserModel.updateOne({\n              username: 'root'\n            }, {\n              $set: {\n                isAdmin: true,\n                hashedPassword: User.hash(config.salt)\n              }\n            }, {\n              upsert: true\n            })[\"catch\"](function (err) {\n              return console.error(\"Failed to update the root user: \".concat(err));\n            });\n\n          case 4:\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(fn(req, res));\n\n          case 6:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n});","map":null,"metadata":{},"sourceType":"module"}