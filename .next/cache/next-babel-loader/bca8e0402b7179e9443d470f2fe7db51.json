{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nexport default function (_ref) {\n  let {\n    title,\n    text,\n    color = 'is-danger',\n    onRemove = null\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"title\", \"text\", \"color\", \"onRemove\"]);\n\n  return __jsx(\"article\", _extends({\n    className: `message ${color}`\n  }, props), __jsx(\"div\", {\n    className: \"message-header\"\n  }, __jsx(\"p\", null, title), onRemove && __jsx(\"button\", {\n    className: \"delete\",\n    \"aria-label\": \"delete\",\n    onClick: () => onRemove()\n  })), __jsx(\"div\", {\n    className: \"message-body\"\n  }, text));\n}\n;","map":null,"metadata":{},"sourceType":"module"}