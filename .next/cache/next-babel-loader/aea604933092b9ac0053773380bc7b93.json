{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { getLogs } from '../../../../../server/pm2';\nimport { database, session, method, authenticate, combine, RequestError } from '../../../../../server/middlewares';\nimport { UserAppRight } from '../../../../../shared/user';\n\nvar onRequest = function onRequest(req, res) {\n  var query, user, id, instanceId, _ref, app, output, error;\n\n  return _regeneratorRuntime.async(function onRequest$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = req.query, user = req.user;\n          id = query.id, instanceId = query.instanceId;\n\n          if (!(!user.isAdmin && !user.hasRight(id, UserAppRight.VIEW))) {\n            _context.next = 4;\n            break;\n          }\n\n          throw new RequestError('You do not have access to this application.', 403);\n\n        case 4:\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(getLogs(instanceId));\n\n        case 6:\n          _ref = _context.sent;\n          app = _ref.app;\n          output = _ref.output;\n          error = _ref.error;\n\n          if (!(app.name != id)) {\n            _context.next = 12;\n            break;\n          }\n\n          throw new RequestError('Application name and pm2 identifier mismatch.');\n\n        case 12:\n          res.status(200).json({\n            output: output,\n            error: error\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default combine(method('GET'), database, session, authenticate({\n  required: true\n}), onRequest);","map":null,"metadata":{},"sourceType":"module"}