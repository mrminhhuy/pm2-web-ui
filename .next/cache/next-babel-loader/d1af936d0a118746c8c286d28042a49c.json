{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { pm2, authenticate, database, session, method, combine } from '../../../server/middlewares';\nimport { getList } from '../../../server/pm2';\nimport { UserAppRight } from '../../../shared/user';\n\nvar list = function list(req, res) {\n  var list, user, apps;\n  return _regeneratorRuntime.async(function list$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(getList());\n\n        case 2:\n          list = _context.sent;\n          user = req.user;\n          apps = user.isAdmin ? list : list.filter(function (a) {\n            return user.hasRight(a.name, UserAppRight.VIEW);\n          });\n          res.status(200).json({\n            apps: apps\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default combine(method('GET'), database, session, authenticate({\n  required: true\n}), pm2, list);","map":null,"metadata":{},"sourceType":"module"}