{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nexport var onInput = function onInput(fn) {\n  return function (e) {\n    return fn(e.target.value);\n  };\n};\nexport var fetcher = function fetcher(path) {\n  var _ref, data;\n\n  return _regeneratorRuntime.async(function fetcher$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(path));\n\n        case 2:\n          _ref = _context.sent;\n          data = _ref.data;\n          return _context.abrupt(\"return\", data);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":null,"metadata":{},"sourceType":"module"}