{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { AppStatus } from \"../../../shared/pm2\";\nimport { useState } from 'react';\nimport useSWR from 'swr';\nimport { fetcher } from '../../../client/util';\nimport ErrorDisplay from '../ErrorDisplay';\nvar tabs = [{\n  title: 'Monitoring',\n  element: MonitoringTab\n}, {\n  title: 'Details',\n  element: DetailsTab\n}, {\n  title: 'Environment',\n  element: EnvironmentTab\n}, {\n  title: 'Logs',\n  element: LogsPanel\n}];\n\nfunction LogsPanel(props) {\n  var _ref = props.app,\n      name = _ref.name,\n      pm_id = _ref.pm_id;\n\n  var _useSWR = useSWR(\"/api/apps/\".concat(name, \"/\").concat(pm_id, \"/logs\"), fetcher, {\n    refreshInterval: 3000\n  }),\n      data = _useSWR.data,\n      error = _useSWR.error,\n      isValidating = _useSWR.isValidating;\n\n  if (error) {\n    var _ref2, _error$response, _ref3, _error$response2, _error$response2$data;\n\n    return __jsx(ErrorDisplay, {\n      title: (_ref2 = (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.statusText) !== null && _ref2 !== void 0 ? _ref2 : 'Error',\n      text: (_ref3 = (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) !== null && _ref3 !== void 0 ? _ref3 : error.toString()\n    });\n  }\n\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"field\"\n  }, __jsx(\"label\", {\n    className: \"label\"\n  }, \"Output Logs\"), __jsx(\"div\", {\n    className: \"control \".concat(!data || isValidating ? 'is-loading' : '')\n  }, __jsx(\"textarea\", {\n    className: \"textarea\",\n    readOnly: true,\n    rows: 15,\n    value: data === null || data === void 0 ? void 0 : data.output.replace(/[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g, '')\n  }))), __jsx(\"div\", {\n    className: \"field\"\n  }, __jsx(\"label\", {\n    className: \"label\"\n  }, \"Error Logs\"), __jsx(\"div\", {\n    className: \"control \".concat(!data || isValidating ? 'is-loading' : '')\n  }, __jsx(\"textarea\", {\n    className: \"textarea\",\n    readOnly: true,\n    rows: 15,\n    value: data === null || data === void 0 ? void 0 : data.error.replace(/[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g, '')\n  }))));\n}\n\nfunction EnvironmentTab(props) {\n  var _ref4 = props.app,\n      name = _ref4.name,\n      pm2_env = _ref4.pm2_env;\n  var env = pm2_env.env;\n  var keys = Object.keys(env).filter(function (k) {\n    return k != name;\n  });\n  return __jsx(\"div\", {\n    className: \"table-container\",\n    style: {\n      width: '100%'\n    }\n  }, __jsx(\"table\", {\n    className: \"table is-narrow is-fullwidth is-bordered auto-overflow\",\n    style: {\n      tableLayout: 'fixed'\n    }\n  }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"env_variable\"), __jsx(\"th\", null, \"value\"))), __jsx(\"tbody\", null, keys.length === 0 ? __jsx(\"tr\", null, __jsx(\"td\", {\n    colSpan: 2\n  }, \"There are no environment variables.\")) : keys.map(function (k) {\n    return __jsx(\"tr\", {\n      key: k\n    }, __jsx(\"td\", null, k), __jsx(\"td\", null, env[k].toString()));\n  }))));\n}\n\nfunction DetailsTab(props) {\n  var _ref5 = props.app,\n      pid = _ref5.pid,\n      pm_id = _ref5.pm_id,\n      name = _ref5.name,\n      pm2_env = _ref5.pm2_env;\n  var pm_exec_path = pm2_env.pm_exec_path,\n      exec_mode = pm2_env.exec_mode,\n      exec_interpreter = pm2_env.exec_interpreter,\n      restart_time = pm2_env.restart_time,\n      unstable_restarts = pm2_env.unstable_restarts,\n      pm_out_log_path = pm2_env.pm_out_log_path,\n      pm_err_log_path = pm2_env.pm_err_log_path;\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"field\"\n  }, __jsx(\"label\", {\n    className: \"label\"\n  }, \"Script Path\"), __jsx(\"div\", {\n    className: \"control\"\n  }, __jsx(\"input\", {\n    className: \"input\",\n    type: \"text\",\n    value: pm_exec_path,\n    readOnly: true\n  }))), __jsx(\"label\", {\n    className: \"label\"\n  }, \"Output Path\"), __jsx(\"div\", {\n    className: \"field is-grouped\"\n  }, __jsx(\"div\", {\n    className: \"control is-expanded\"\n  }, __jsx(\"input\", {\n    className: \"input\",\n    type: \"text\",\n    value: pm_out_log_path,\n    readOnly: true\n  })), __jsx(\"div\", {\n    className: \"control is-expanded\"\n  }, __jsx(\"input\", {\n    className: \"input\",\n    type: \"text\",\n    value: pm_err_log_path,\n    readOnly: true\n  }))), __jsx(\"table\", {\n    className: \"table is-fullwidth is-bordered\"\n  }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"pm_id\"), __jsx(\"th\", null, \"pid\"), __jsx(\"th\", null, \"exec_mode\"), __jsx(\"th\", null, \"exec_interpreter\"))), __jsx(\"tbody\", null, __jsx(\"tr\", null, __jsx(\"td\", null, pm_id), __jsx(\"td\", null, pid), __jsx(\"td\", null, exec_mode), __jsx(\"td\", null, exec_interpreter))), __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", {\n    colSpan: 2\n  }, \"restarts\"), __jsx(\"th\", {\n    colSpan: 2\n  }, \"unstable_restarts\"))), __jsx(\"tbody\", null, __jsx(\"tr\", null, __jsx(\"td\", {\n    colSpan: 2\n  }, restart_time), __jsx(\"td\", {\n    colSpan: 2\n  }, unstable_restarts)))));\n}\n\nvar bytesInMb = Math.pow(1024, 2);\n\nfunction MonitoringTab(props) {\n  var _ref6 = props.app,\n      monit = _ref6.monit,\n      pm2_env = _ref6.pm2_env;\n  var cpu = monit.cpu,\n      memory = monit.memory;\n  var status = pm2_env.status;\n  return __jsx(\"table\", {\n    className: \"table status-table is-fullwidth is-centered\"\n  }, __jsx(\"thead\", null, __jsx(\"tr\", {\n    className: \"is-size-5 \".concat(status === AppStatus.ONLINE || status === AppStatus.ONE_LAUNCH ? 'is-online' : 'is-offline')\n  }, __jsx(\"th\", null, \"status\"), __jsx(\"th\", null, \"memory\"), __jsx(\"th\", null, \"cpu\"))), __jsx(\"tbody\", null, __jsx(\"tr\", null, __jsx(\"td\", null, status), __jsx(\"td\", null, (memory / bytesInMb).toFixed(2), \"mb\"), __jsx(\"td\", null, cpu, \"%\"))));\n}\n\n;\nexport default function (_ref7) {\n  var props = _extends({}, _ref7);\n\n  var _useState = useState(0),\n      tabIndex = _useState[0],\n      setTab = _useState[1];\n\n  var app = props.app;\n  var pid = app.pid;\n  var Element = tabs[tabIndex].element;\n  return __jsx(\"div\", {\n    className: \"box\"\n  }, __jsx(\"div\", null, __jsx(\"p\", {\n    style: {\n      marginBottom: '-2rem'\n    }\n  }, \"pid: \", pid)), __jsx(\"div\", {\n    className: \"tabs is-centered\"\n  }, __jsx(\"ul\", null, tabs.map(function (t, index) {\n    return __jsx(\"li\", {\n      key: t.title,\n      className: index == tabIndex ? 'is-active' : '',\n      onClick: function onClick() {\n        return setTab(index);\n      }\n    }, __jsx(\"a\", null, t.title));\n  }))), __jsx(Element, {\n    app: app\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}