{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nexport default function (props) {\n  const {\n    name,\n    icon,\n    invalid,\n    invalidMessage\n  } = props,\n        rest = _objectWithoutProperties(props, [\"name\", \"icon\", \"invalid\", \"invalidMessage\"]);\n\n  return __jsx(\"div\", {\n    className: \"field\"\n  }, __jsx(\"label\", {\n    className: \"label\"\n  }, name), __jsx(\"div\", {\n    className: \"control has-icons-left has-icons-right\"\n  }, __jsx(\"input\", _extends({\n    className: `input ${invalid ? 'is-danger' : ''}`\n  }, rest)), icon && __jsx(\"span\", {\n    className: \"icon is-small is-left\"\n  }, __jsx(\"i\", {\n    className: `fas ${icon}`\n  })), invalid && __jsx(\"span\", {\n    className: \"icon is-small is-right\"\n  }, __jsx(\"i\", {\n    className: \"fas fa-exclamation-triangle\"\n  }))), invalid && invalidMessage && __jsx(\"p\", {\n    className: \"help is-danger\"\n  }, invalidMessage));\n}\n;","map":null,"metadata":{},"sourceType":"module"}