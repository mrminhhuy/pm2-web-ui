{"ast":null,"code":"import { pm2, authenticate, database, session, method, combine, RequestError } from '../../../../server/middlewares';\nimport { getApp, stopApp, deleteApp, reloadApp, restartApp } from '../../../../server/pm2';\nimport { AppAction } from '../../../../shared/actions';\nimport { UserAppRight } from '../../../../shared/user';\n\nconst onGet = async (req, res) => {\n  const {\n    user,\n    query\n  } = req;\n  const {\n    id\n  } = query;\n\n  if (!user.isAdmin && !user.hasRight(id, UserAppRight.VIEW)) {\n    throw new RequestError('You do not have access to this application.', 403);\n  }\n\n  const app = await getApp(id);\n\n  if (!app) {\n    throw new RequestError('This application does not exist.', 404);\n  }\n\n  res.status(200).json({\n    app\n  });\n};\n\nconst actions = {\n  [AppAction.DELETE]: {\n    fn: deleteApp,\n    right: UserAppRight.DELETE\n  },\n  [AppAction.STOP]: {\n    fn: stopApp,\n    right: UserAppRight.MANAGE\n  },\n  [AppAction.RELOAD]: {\n    fn: reloadApp,\n    right: UserAppRight.MANAGE\n  },\n  [AppAction.RESTART]: {\n    fn: restartApp,\n    right: UserAppRight.MANAGE\n  },\n  [AppAction.START]: {\n    fn: restartApp,\n    right: UserAppRight.MANAGE\n  }\n};\n\nconst onPost = async (req, res) => {\n  const {\n    query,\n    user\n  } = req;\n  const {\n    action\n  } = req.body;\n  const {\n    id\n  } = query;\n  const {\n    fn,\n    right\n  } = actions[action];\n\n  if (!user.isAdmin && !user.hasRight(id, right)) {\n    throw new RequestError('You don\\'t have enough permissions to do this.', 403);\n  }\n\n  try {\n    await fn(id);\n    res.status(200).json({});\n  } catch (err) {\n    var _err$message;\n\n    throw new RequestError((_err$message = err.message) !== null && _err$message !== void 0 ? _err$message : err.toString());\n  }\n};\n\nconst onRequest = (req, res) => req.method === 'GET' ? onGet(req, res) : onPost(req, res);\n\nexport default combine(method('GET', 'POST'), database, session, authenticate({\n  required: true\n}), pm2, onRequest);","map":null,"metadata":{},"sourceType":"module"}