{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport pm from 'pm2';\nvar state = {\n  connected: false,\n  stable: true\n};\n\nvar connect = function connect() {\n  var noDaemon = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  return new Promise(function (resolve, reject) {\n    return pm.connect(noDaemon, function (err) {\n      return err ? reject(err) : resolve();\n    });\n  });\n};\n\nvar disconnect = function disconnect() {\n  return new Promise(function (resolve, reject) {\n    return pm.list(function (err) {\n      return err ? reject(err) : resolve();\n    });\n  });\n};\n\nexport default (function (fn) {\n  return function _callee(req, res) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n\n            if (state.stable) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(disconnect());\n\n          case 4:\n            state.connected = false;\n            state.stable = true;\n\n          case 6:\n            if (state.connected) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(connect());\n\n          case 9:\n            state.connected = true;\n            state.stable = true;\n\n          case 11:\n            _context.next = 18;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](0);\n            state.connected = false;\n            res.status(500).json({\n              message: \"pm2: \".concat(_context.t0)\n            });\n            return _context.abrupt(\"return\");\n\n          case 18:\n            _context.next = 20;\n            return _regeneratorRuntime.awrap(fn(req, res));\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 13]], Promise);\n  };\n});\nexport var getState = function getState() {\n  return state;\n};","map":null,"metadata":{},"sourceType":"module"}